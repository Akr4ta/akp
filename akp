#!/bin/bash

# Check if the command is not empty
if [ -z "$1" ]; then
    echo "Erro: Nenhum alvo selecionado."
    exit 1
fi

# Creanting package list
packages="${@:2}"

# Translate akp command to pacman, yay and flatpak equivalent command
case "$1" in
    -U)
        # Update system with arch repositories
        sudo pacman -Syu
        ;;
    -Ud)
        # Update distro (arch, aur and flatpak repositories)
        sudo pacman -Syu && echo "" && yay -a -Syu && echo "" && flatpak update
        ;;
    -Um)
	# Update mirrors
	sudo reflector --country $packages --protocol https --sort rate --save /etc/pacman.d/mirrorlist && sudo pacman -Syyu
	;;
    -I)
        # Install package

        # Check if at least one package was provided
        if [ -z "$2" ]; then
            echo "Erro: Forneça pelo menos um pacote para instalar."
            exit 1
        fi
        
        # Defining pacman command
        pacmanCommand="sudo pacman -S"
       
        # Function to get optional dependencies from Pacman.
        get_optional_deps() {
            package="$1"
            pactree -so "$package" | grep "(optional)" | rev | cut -d " " -f 2- | rev | cut -c 4- | tr '─' ' ' | sed 's/^\([^:]*\):/\x1b[0;34m\1\x1b[0m:/'
        }

         # Display optional dependencies
        for pkg in "$@"; do
            if [ "$pkg" != "-I" ]; then
                optionalDeps=$(get_optional_deps "$pkg")
                if [ -n "$optionalDeps" ]; then
                    echo -e "O pacote \033[0;32m$pkg\033[0m possui as seguintes dependências opcionais:"
                    
                    # Add " :: " to the beginning of each line
                    echo "$optionalDeps" | sed 's/^/ ::/'

                    # Ask the user which optional dependencies they want to install
                    echo -e "Deseja instalar alguma(s) das dependências opcionais para \033[0;32m$pkg\033[0m? (Digite os nomes separados por espaços): " 
                    read -p "" selectedOptionalDeps
                    echo " "

		    # Add the main packages and the selected optional dependencies to the package list
                    packages="$packages $pkg $selectedOptionalDeps"
                else
                    # If there are no optional dependencies, add only the main package to the list
		    packages="$packages $pkg"
                fi
            fi
        done
	$pacmanCommand $packages
        ;;
    -S)
        # Search package
        pacman -Ss $packages
        ;;
    -R)
        # Remove package
        sudo pacman -R $packages
        ;;
    -Rr)
        # Remove package, dependencies, etc...
        sudo pacman -Rsn $packages
        ;;
    -Qi)
        # Query information about a package
        pacman -Qi $packages
        ;;
    -Qn)
        # Query list of unnecessary packages and their dependencies
        pacman -Qdt
        ;;
    -Qm)
        # Query current mirrors
        cat /etc/pacman.d/mirrorlist
        ;;
    -Ua)
        # Update aur
        yay -a -Syu
        ;;
    -Ia)
        # Install aur package
        yay -S $packages
        ;;
    -Sa)
        # Search aur package
        yay -a -Ss $packages
        ;;
    -Qa)
        # Query installed packages from aur
        pacman -Qm
        ;;
    -Uf)
        # Update flatpak
        flatpak update
        ;;
    -If)
        # Install flatpak package
        flatpak install flathub $packages
        ;;
    -Sf)
        # Search flatpak package
        flatpak search $packages
        ;;
    -Rf)
        # Remove flatpak package
        flatpak uninstall $packages
        ;;
    -Qf)
        # Query installed packages from flatpak
        flatpak list
        ;;
    -Qfi)
        # Query flatpak package information
        flatpak info $packages
        ;;
    --help)
        # Help
        echo " ########## PACMAN ########## "
        echo -e "akp -U:  Atualizar sistema (\033[1;32mU\033[0mpdate system)"
        echo -e "akp -Ud: Atualizar distro (\033[1;32mU\033[0mpdate \033[1;32mD\033[0mistro (\033[1;32mArch\033[0m, \033[1;32maur\033[0m and \033[1;32mflatpak\033[0m repo))"
	echo -e "akp -Um: Atualizar mirrors com reflector (\033[1;32mU\033[0mpdate \033[1;32mM\033[0mirros)"
        echo -e "akp -I:  Instalar pacote (\033[1;32mI\033[0mnstall package)"
        echo -e "akp -S:  Pesquisar pacote (\033[1;32mS\033[0mearch packge)"
        echo -e "akp -R:  Remover pacote (\033[1;32mR\033[0memove package)"
        echo -e "akp -Rr: Remover pacote, dependencia e etc (\033[1;32mR\033[0memove package, dependency, etc)"
        echo -e "akp -Qi: Consultar informação sobre um pacote (\033[1;32mQ\033[0muery package \033[1;32mI\033[0mnformation)"
        echo -e "akp -Qn: Consultar lista sobre pacotes desnecessarios e suas dependencias (\033[1;32mQ\033[0muery list of \033[1;32mN\033[0meedless packages and dependencies)"
        echo -e "akp -Qm: Consultar os mirrors atuais (\033[1;32mQ\033[0muery current \033[1;32mM\033[0mirrors)"
        echo " "
	echo " ########## YAY ########## "
        echo -e "akp -Ua: Atualizar AUR (\033[1;32mU\033[0mpdate \033[1;32mA\033[0mUR)"
        echo -e "akp -Ia: Instalar pacote do AUR (\033[1;32mI\033[0mnstall \033[1;32mA\033[0mUR package)"
        echo -e "akp -Sa: Pesquisar pacote do AUR (\033[1;32mS\033[0mearch package in \033[1;32mA\033[0mUR repo)"
        echo -e "akp -Qa: Consultar pacotes instalados do AUR (\033[1;32mQ\033[0muery packages from the \033[1;32mA\033[0mUR repository)"
        echo " "
	echo " ########## FLATPAK ########## "
        echo -e "akp -Uf: Atualizar Flatpak (\033[1;32mF\033[0mlatpak \033[1;32mU\033[0mpdate)"
        echo -e "akp -If: Instalar pacote Flatpak (\033[1;32mI\033[0mnstall \033[1;32mF\033[0mlatpak package)"
        echo -e "akp -Sf: Pesquisar por pacote Flatpak (\033[1;32mS\033[0mearch \033[1;32mF\033[0mlatpak package)"
        echo -e "akp -Rf: Remover pacote Flatpak (\033[1;32mR\033[0memove \033[1;32mF\033[0mlatpak package)"
        echo -e "akp -Qf: Consultar pacotes instalados do Flatpak (\033[1;32mQ\033[0muery packages from the \033[1;32mF\033[0mlatpak repository)"
        echo -e "akp -Qfi: Consultar informação sobre pacote Flatpak (\033[1;32mQ\033[0muery \033[1;32mF\033[0mlatpak \033[1;32mI\033[0mnformation package)"
        ;;        
    *)
        echo "Comando akp não reconhecido."
        exit 1
        ;;
esac