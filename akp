#!/bin/bash

# Check if the command is not empty
if [ -z "$1" ]; then
	echo -e "\033[0;31merror:\033[0m no operation selected"
    	exit 1
fi

# Creanting package list
packages="${@:2}"

# Translate akp command to pacman, yay and flatpak equivalent command
case "$1" in
    -U) sudo pacman -Syu ;;
    -Uaf)
        # update distro (arch, aur and flatpak repositories)
        sudo echo -e "\033[0;34mArch repositories\033[0m" && sudo pacman -Syu && echo "" && echo -e "\033[0;36mAUR repository\033[0m" && yay -a -Syu && echo "" && echo -e "\033[0;33mFlathub repository\033[0m" && flatpak update
        ;;
    -S) pacman -Ss $packages ;;
    -I)
        # install package
	# check if at least one package was provided
        if [ -z "$2" ]; then
            echo -e "\033[0;31merror:\033[0m please provide at least one target"
            exit 1
        fi
        
	# defining pacman command
        pacmanCommand="sudo pacman -S"
       
        # function to get optional dependencies from Pacman
        get_optional_deps() {
            package="$1"
	    expac -S '%O' "$package" | sed 's/  /\n/g' | sed 's/^\([^:]*\):/ \x1b[0;34m\1\x1b[0m:/'
        }

         # display optional dependencies
        for pkg in "$@"; do
            if [ "$pkg" != "-I" ]; then
                optionalDeps=$(get_optional_deps "$pkg")
                if [ -n "$optionalDeps" ]; then
                    echo -e "The \033[0;32m$pkg\033[0m package has the following optional dependencies:"
                    
                    # add " :: " to the beginning of each line
                    echo "$optionalDeps"

                    # ask the user which optional dependencies they want to install
                    echo -e "Do you want to install any of the optional dependencies for \033[0;32m$pkg\033[0m? (Enter the names separated by spaces): " 
                    read -p "" selectedOptionalDeps
                    echo " "

		    # add the main packages and the selected optional dependencies to the package list
                    packages="$packages $pkg $selectedOptionalDeps"
                else
                    # if there are no optional dependencies, add only the main package to the list
		    packages="$packages $pkg"
                fi
            fi
        done
	$pacmanCommand $packages
        ;; 
    -R) sudo pacman -R $packages ;;
    -Rd) sudo pacman -Rsn $packages ;;
    -Qi) pacman -Qi $packages ;;
    -Qri) pacman -Si $packages ;;
    -Qln) pacman -Qdt ;;
    -Ua) yay -a -Syu ;; 
    -Sa) yay -a -Ss $packages ;;
    -Ia) yay -a -S $packages ;;
    -Qai) yay -a -Si $packages ;;
    -Qal) pacman -Qm ;;
    -Uf) flatpak update ;; 
    -Sf) flatpak search $packages ;;
    -If) flatpak install flathub $packages ;;
    -Rf) flatpak uninstall $packages ;;
    -Qfi) flatpak info $packages ;;
    -Qfl)
	echo -e "\033[0;33mApplications\033[0m" && flatpak list --app
        echo " "
        echo -e "\033[0;33mRuntimes\033[0m" && flatpak list --runtime 
        ;;
    --help|-h)
        # help
        echo " " 
        echo "akp -U                  Update arch"
        echo "akp -Uaf                Update arch, aur and flatpak repositories"
	echo "akp -S   [package(s)]   Search package"
	echo "akp -I   <package(s)>   Install package(s)"
        echo "akp -R   <package(s)>   Remove package(s)"
        echo "akp -Rd  <package(s)>   Remove package(s), its dependencies and all the packages that depend on the target package(s)"
        echo "akp -Qi  [package(s)]   Query Local package Information"
        echo "akp -Qri [package(s)]   Query package information in the arch Repository"
        echo "akp -Qln                Query List Needless packages and dependencies"
        echo " "
        echo "akp -Ua                 Update AUR"
        echo "akp -Sa  [package(s)]   Search AUR package"
        echo "akp -Ia  <package(s)>   Install AUR package(s)"
	echo "akp -Qai [package(s)]   Query package information in the AUR"
        echo "akp -Qal                Query List installed AUR packages"
        echo " "
	echo "akp -Uf                 Update Flatpak"
        echo "akp -Sf  <package(s)>   Search Flatpak package"
        echo "akp -If  <package(s)>   Install Flatpak package(s) from flathub" 
        echo "akp -Rf  <package(s)>   Remove Flatpak package(s)"
        echo "akp -Qfi <package(s)>   Query Flatpak package information"
	echo "akp -Qfl                Query List installed Flatpak packages"
	echo " "
	echo "akp -h                  Shows this help page"
	;;        
    *)
        #echo "akp command not recognized"
	echo -e "\033[0;31merror:\033[0m akp command '$1' not recognized"
        exit 1
        ;;
esac
